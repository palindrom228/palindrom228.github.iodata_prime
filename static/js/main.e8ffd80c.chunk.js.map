{"version":3,"sources":["UI/DatePicker.js","customInput.js","App.js","reportWebVitals.js","index.js"],"names":["DatePicker","initValue","moment","valueOf","onChange","hide","useState","format","selectedDate","setSelectedDate","month","setMonth","calendar","setCalendar","time","setTime","useEffect","firstDate","isoWeekday","nextMonth","add","lastDay","newCalendar","i","Number","push","filMonth","arrh","arr","hour","hourArr","arrm","minute","minuteArr","selectH","e","newState","currentTarget","getAttribute","selectM","setInSelecting","inSelecting","name","value","weekHub","Fragment","className","onClick","subtract","icon","faArrowLeft","faArrowRight","Math","floor","faSortDown","faSortUp","map","h","data","m","day","date","render","length","CustomInput","post","setDate","dateIsOn","setDateIsOn","focused","setFocused","outSideClick","refInput","current","contains","target","textArea","blur","document","removeEventListener","useRef","selectIsOpened","setSelectIsOpened","_id","selectValue","setSelectValue","handleChangeSelected","text","setText","ref","preventDefault","focus","addEventListener","faSquare","onKeyDown","key","console","log","innerText","role","contentEditable","faCalendar","faChevronDown","faAddressBook","App","posts","setPosts","list","newPost","random","prev","concat","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"qRAgJeA,EA3II,SAAC,GAAuD,IAAD,IAApDC,iBAAoD,MAAxCC,MAASC,UAA+B,EAArBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KAAW,EAC9BC,mBAASJ,IAAOA,IAAOD,GAAWM,OAAO,SAAS,SAASJ,WAD7B,mBAC/DK,EAD+D,KACjDC,EADiD,OAE5CH,mBAASJ,IAAOA,IAAOD,GAAWM,OAAO,OAAQ,OAAOJ,WAFZ,mBAE/DO,EAF+D,KAExDC,EAFwD,OAGtCL,mBAAS,IAH6B,mBAG/DM,EAH+D,KAGrDC,EAHqD,OAc9CP,mBAAS,MAdqC,mBAc/DQ,EAd+D,KAczDC,EAdyD,KAetEC,qBAAU,YAXO,WAKb,IAJA,IAAMC,EAAYP,EAA4C,OAAlCR,IAAOQ,GAAOQ,aAAe,GACnDC,EAAYjB,IAAOA,IAAOQ,GAAOH,OAAO,OAAQ,OAAOa,IAAI,EAAG,KAAKjB,UACnEkB,EAAUF,EAAwD,OAA1C,EAAIjB,IAAOiB,GAAWD,aAAe,GAC7DI,EAAc,GACXC,EAAIC,OAAOP,GAAYM,EAAIC,OAAOH,GAAUE,GAAQ,MACzDD,EAAYG,KAAKvB,IAAOqB,GAAGhB,OAAO,UAEtCM,EAAYS,GAIZI,KACF,CAAChB,IACH,IAoBMiB,EApBU,WAIZ,IAHA,IAAIC,EAAM,GACNC,EAAO,KAEHN,EAAI,EAAGA,EAAI,GAAIA,IACnBK,EAAIL,GAAKM,EAFF,SAGPA,GAAc,QACGA,EAAO,GAE5B,OAAOD,EAWEE,GACPC,EAVY,WAGd,IAFA,IAAIH,EAAM,GACNI,EAAS,EACLT,EAAI,EAAGA,EAAI,EAAGA,IAClBK,EAAIL,GAAKS,EACTA,GAAkB,IAEtB,OAAOJ,EAGEK,GACPC,EAAU,SAACC,GACb,IAAIC,EAAYtB,EAAO,KAAWU,OAAOW,EAAEE,cAAcC,aAAa,SACtEvB,EAAQqB,IAENG,EAAU,SAACJ,GACb,IAAIC,EAAWtB,EAAQA,EAAO,KAAWU,OAAOW,EAAEE,cAAcC,aAAa,SAC7EvB,EAAQqB,GACRI,GAAgBC,IAUpBzB,qBAAU,WAMNZ,EALQ,CACAsC,KAAM,OACNC,MAAOnC,EAAeM,MAIhC,CAACA,EAAKN,IAhE8D,MAiEjCF,oBAAS,GAjEwB,mBAiE/DmC,EAjE+D,KAiEnDD,EAjEmD,KAkElEI,EAAU,GACd,OACI,cAAC,IAAMC,SAAP,UACI,sBAAKC,UAAU,gBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,wBAAwBC,QAlBrC,WACd,IAAIX,EAAWlC,IAAOQ,GAAOsC,SAAS,EAAE,KAAK7C,UAC7CQ,EAASyB,IAgBG,SAA2D,cAAC,IAAD,CAAiBa,KAAMC,QAClF,qBAAKJ,UAAU,kBAAf,SAAkC5C,IAAOQ,GAAOH,OAAO,UACvD,qBAAKuC,UAAU,wBAAwBC,QAxBrC,WACd,IAAIX,EAAWlC,IAAOQ,GAAOU,IAAI,EAAE,KAAKjB,UACxCQ,EAASyB,IAsBG,SAA2D,cAAC,IAAD,CAAiBa,KAAME,WAEtF,sBAAKL,UAAU,aAAf,UACI,oBAAGA,UAAU,QAAb,UAAsBM,KAAKC,MAAMvC,EAAO,MAAxC,MAAsDA,EAAO,OAAW,EAAIA,EAAO,KAAW,IAAO,QACrG,cAAC,IAAD,CAAiBgC,UAAU,QAAQG,KAAMK,IAAYP,QAAS,WAAKP,GAAgBC,MACnF,sBAAKK,UAAWL,EAAY,sBAAsB,WAAlD,UACI,sBAAKK,UAAU,gBAAf,UACI,qBAAKA,UAAU,iBAAf,SAAgC,cAAC,IAAD,CAAiBG,KAAMM,QACvD,qBAAKT,UAAU,mBAAf,SAAkC,cAAC,IAAD,CAAiBG,KAAMK,QACzD,qBAAKR,UAAU,YAAf,SAEQnB,EAAK6B,KAAI,SAACC,GACN,OAAU,IAANA,EAAgB,mBAAWC,KAAMD,EAAGV,QAASb,EAA7B,eAAQuB,GACrB,mBAAGC,KAAMD,EAAWV,QAASb,EAA7B,SAAuCkB,KAAKC,MAAMI,EAAI,OAArCA,WAKxC,sBAAKX,UAAU,iBAAf,UACI,qBAAKA,UAAU,iBAAf,SAAgC,cAAC,IAAD,CAAiBG,KAAMM,QACvD,qBAAKT,UAAU,mBAAf,SAAkC,cAAC,IAAD,CAAiBG,KAAMK,QACzD,qBAAKR,UAAU,YAAf,SAEQf,EAAKyB,KAAI,SAACG,GACN,OAAU,IAANA,EAAgB,mBAAGD,KAAMC,EAAWZ,QAASR,EAA7B,eAAiBoB,GAC9B,mBAAGD,KAAMC,EAAWZ,QAASR,EAA7B,SAAwCoB,EAAI,KAAW,KAAtCA,iBAOhD,sBAAKb,UAAU,qBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,+CACA,+CACA,+CACA,+CACA,+CACA,+CACA,kDAEJ,qBAAKA,UAAU,qBAAf,SACHlC,EAAS4C,KAAI,SAACI,EAAIrC,GACnB,IAAMsC,EAAOD,EAGb,GAFAhB,EAAQnB,KAAKoC,IAEPtC,EAAI,GAAK,IAAO,EAAG,CACrB,IAAMuC,EAASlB,EAEf,OADAA,EAAU,GACH,qBAAiDE,UAAYlC,EAASmD,OAAS,IAAO,EAAE,uBAAwBnD,EAASmD,OAAS,IAAO,EAAI,uBAAwBnD,EAASmD,OAAS,IAAO,EAAE,uBAAuB,GAAvN,SACFD,EAAON,KAAI,SAACI,GACT,OACQ,qBAAKd,UAAW5C,IAAOM,GAAcD,OAAO,UAAUqD,EAAI,qCAAqC,gBAAyDF,KAAMxD,IAAO0D,EAAI,SAASzD,UAAW4C,QAAS,SAACZ,GAAK1B,EAAgBe,OAAOW,EAAEE,cAAcC,aAAa,UAAWjC,KAA3Q,SAAqRH,IAAO0D,EAAI,SAASrD,OAAO,MAA3LL,IAAO0D,EAAI,SAASzD,UAAY,OAHpJD,IAAO0D,EAAI,SAASrD,OAAO,KAAO,oBCjCxDyD,EA1FK,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAAU,EACJ3D,mBAASJ,MAASC,WADd,mBACrB0D,EADqB,KACfK,EADe,OAEI5D,oBAAS,GAFb,mBAErB6D,EAFqB,KAEXC,EAFW,OAME9D,oBAAS,GANX,mBAMrB+D,EANqB,KAMZC,EANY,KAetBC,EAAe,SAAfA,EAAgBpC,GACdqC,EAASC,QAAQC,SAASvC,EAAEwC,UAC5BL,GAAW,GACXM,EAASH,QAAQI,OACjBC,SAASC,oBAAoB,YAAYR,KAG3CC,EAAWQ,mBACXJ,EAAWI,mBAvBW,EAwBgB1E,oBAAS,GAxBzB,mBAwBrB2E,EAxBqB,KAwBLC,EAxBK,OAyBU5E,mBAAS,CAC3C6E,IAAK,EACLxC,MAAO,YA3BiB,mBAyBrByC,EAzBqB,KAyBRC,EAzBQ,KA6BtBC,EAAuB,SAACnD,GAC1BkD,EAAe,CAACF,IAAKhD,EAAEE,cAAcC,aAAa,QAASK,MAAOR,EAAEE,cAAcC,aAAa,WA9BvE,EA+CLhC,mBAAS,IA/CJ,mBA+CrBiF,EA/CqB,KA+ChBC,EA/CgB,KAyD5B,OACI,sBAAKC,IAAKjB,EAAU1B,UAAWuB,EAAQ,wBAAwB,iBAAkBtB,QAnDvE,SAACZ,GACXA,EAAEuD,iBACErB,IACAC,GAAW,GACXM,EAASH,QAAQkB,QACjBb,SAASc,iBAAiB,YAAYrB,KA8C1C,UACI,qBAAKzB,UAAU,UAAf,SACI,qBAAKA,UAAU,UAAf,SAAyB,cAAC,IAAD,CAAiBG,KAAM4C,UAGhD,sBAAMJ,IAAKb,EAAUkB,UAfd,SAAC3D,GACN,SAAPA,EAAE4D,KACD5D,EAAEuD,iBACFM,QAAQC,IAAI,SAjBbV,EAAKxB,OAAS,IACbyB,EAAQ,IACRtB,EAAQhE,MAASC,WACjBkF,EAAe,CACXF,IAAK,EACLxC,MAAO,YAEXiC,EAASH,QAAQyB,UAAY,GAC7BjC,EAAKsB,EAAM1B,EAAKlB,MAAMyC,EAAYzC,SAYlC6C,EAAQrD,EAAEwC,OAAOuB,YAS+BpD,UAAU,YAAYqD,KAAK,UAAUC,gBAAgB,SAErG,sBAAKtD,UAAU,YAAf,UACI,sBAAKA,UAAU,cAAf,UACI,cAAC,IAAD,CAAiBG,KAAMoD,IAAYtD,QAAS,kBAAIqB,GAAaD,MAC7D,qBAAKrB,UAAWqB,EAAS,mCAAmC,oBAA5D,SACI,cAAC,EAAD,CAAY/D,SAlEP,SAACsD,GACtBQ,EAAQR,IAiEgDrD,KAxB/C,oBA2BD,sBAAKyC,UAAU,SAASC,QAAS,WAAKmC,GAAmBD,IAAzD,UACI,qBAAKnC,UAAU,oBACf,4BAAIsC,EAAYzC,QAChB,cAAC,IAAD,CAAiBM,KAAMqD,MACtBrB,EAAe,qBAAKnC,UAAU,WAAf,SACZ,+BACI,qBAAIA,UAAyB,IAAdsC,EAAgB,eAAe,GAAIrC,QAASuC,EAAsB5B,KAAK,IAAIhB,KAAK,gBAA/F,UAA+G,cAAC,IAAD,CAAiBO,KAAMsD,MAAtI,mBACA,qBAAIzD,UAAyB,IAAdsC,EAAgB,eAAe,GAAIrC,QAASuC,EAAsB5B,KAAK,IAAIhB,KAAK,YAA/F,UAA2G,cAAC,IAAD,CAAiBO,KAAMsD,MAAlI,eACA,qBAAIzD,UAAyB,IAAdsC,EAAgB,eAAe,GAAIrC,QAASuC,EAAsB5B,KAAK,IAAIhB,KAAK,gBAA/F,UAA+G,cAAC,IAAD,CAAiBO,KAAMsD,MAAtI,mBACA,qBAAIzD,UAAyB,IAAdsC,EAAgB,eAAe,GAAIrC,QAASuC,EAAsB5B,KAAK,IAAIhB,KAAK,aAA/F,UAA4G,cAAC,IAAD,CAAiBO,KAAMsD,MAAnI,gBACA,qBAAIzD,UAAyB,IAAdsC,EAAgB,eAAe,GAAIrC,QAASuC,EAAsB5B,KAAK,IAAIhB,KAAK,aAA/F,UAA4G,cAAC,IAAD,CAAiBO,KAAMsD,MAAnI,qBAED,aCjCZC,MAhDf,WAAgB,IAAD,EACYlG,mBAAS,IADrB,mBACNmG,EADM,KACAC,EADA,KAeb,OACE,sBAAK5D,UAAU,MAAf,UACI,cAAC,EAAD,CAAamB,KAfA,SAAEsB,GAA8C,IAAxC1B,EAAuC,uDAAhC3D,MAAUyG,EAAsB,uDAAf,UAC3CC,EAAU,CACdzB,IAAMjF,MAA2B,IAAhBkD,KAAKyD,SACtBtB,OACA1B,OACA8C,QAGFD,GAAS,SAAAI,GAEP,OADiBA,EAAKC,OAAO,CAACH,UAO5B,qBAAK9D,UAAU,QAAf,SAEM2D,EAAMjD,KAAI,SAACwD,GACT,OACE,sBAAKlE,UAAU,6BAAf,UACN,qBAAKA,UAAU,UAAf,SACI,qBAAKA,UAAU,UAAf,SAAyB,cAAC,IAAD,CAAiBG,KAAM4C,UAGhD,sBAAM/C,UAAU,uBAAuBqD,KAAK,UAA5C,SACE,4BAAIa,EAAKzB,SAEf,sBAAKzC,UAAU,YAAf,UACI,qBAAKA,UAAU,gCAAf,SACG5C,IAAO8G,EAAKnD,MAAMtD,OAAO,WAE5B,sBAAKuC,UAAU,SAAf,UACI,qBAAKA,UAAU,oBACf,4BAAIkE,EAAKL,eAdsCK,EAAK7B,cClBzD8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAS5D,OACP,cAAC,IAAM6D,WAAP,UACE,cAAC,EAAD,MAEF7C,SAAS8C,eAAe,SAM1BX,M","file":"static/js/main.e8ffd80c.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {  faArrowLeft, faArrowRight, faSortDown, faSortUp } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst DatePicker = ({ initValue = moment().valueOf(),onChange, hide }) => {\r\n    const [selectedDate, setSelectedDate] = useState(moment(moment(initValue).format('D/M/Y'),'D/M/Y').valueOf())\r\n    const [month, setMonth] = useState(moment(moment(initValue).format('M/Y'), 'M/Y').valueOf())\r\n    const [calendar, setCalendar] = useState([])\r\n    const filMonth = () => {\r\n        const firstDate = month - ((moment(month).isoWeekday() - 1) * 86400000)\r\n        const nextMonth = moment(moment(month).format('M/Y'), 'M/Y').add(1, 'M').valueOf()\r\n        const lastDay = nextMonth + ((7 - moment(nextMonth).isoWeekday() + 1) * 86400000)\r\n        const newCalendar = []\r\n        for (let i = Number(firstDate); i < Number(lastDay); i = i + 86400000) {\r\n            newCalendar.push(moment(i).format('D/M/Y'))\r\n        }\r\n        setCalendar(newCalendar)\r\n    }\r\n    const [time, setTime] = useState(36000000)\r\n    useEffect(()=>{\r\n        filMonth()\r\n    },[month])\r\n    const hourArr = () =>{\r\n        let arr = []\r\n        let hour = 36000000\r\n        let  pot = 86400000\r\n        for(let i = 0; i < 17; i++){\r\n            arr[i] = hour\r\n            hour = hour + 3600000\r\n            if(hour === pot) hour = 0\r\n        }\r\n        return arr\r\n    }\r\n    const minuteArr = () => {\r\n        let arr = []\r\n        let minute = 0\r\n        for(let i = 0; i < 6; i++){\r\n            arr[i] = minute\r\n            minute = minute + 600000\r\n        }\r\n        return arr\r\n    }\r\n    const arrh = hourArr()\r\n    const arrm = minuteArr()\r\n    const selectH = (e) => {\r\n        let newState = (time % 3600000) + Number(e.currentTarget.getAttribute('data'))\r\n        setTime(newState)\r\n    }\r\n    const selectM = (e) => {\r\n        let newState = time - (time % 3600000) + Number(e.currentTarget.getAttribute('data'))\r\n        setTime(newState)\r\n        setInSelecting(!inSelecting)\r\n    }\r\n    const nextMonth = () => {\r\n        let newState = moment(month).add(1,'M').valueOf()\r\n        setMonth(newState)\r\n    }\r\n    const prevMonth = () => {\r\n        let newState = moment(month).subtract(1,'M').valueOf()\r\n        setMonth(newState)\r\n    }\r\n    useEffect(()=>{\r\n        let e = {\r\n                name: 'date',\r\n                value: selectedDate + time\r\n        }\r\n        \r\n        onChange(e)\r\n    },[time,selectedDate])\r\n    const [inSelecting,setInSelecting] = useState(false)\r\n    var weekHub = []\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"datePickerBox\">\r\n                <div className=\"datePickerNavi\">\r\n                    <div className='iconBoxNaviDatePicker' onClick={prevMonth}><FontAwesomeIcon icon={faArrowLeft}></FontAwesomeIcon></div>\r\n                    <div className=\"datePickerMonth\">{moment(month).format('MMMM')}</div>\r\n                    <div className='iconBoxNaviDatePicker' onClick={nextMonth}><FontAwesomeIcon icon={faArrowRight}></FontAwesomeIcon></div>\r\n                </div>\r\n                <div className='timePicker'>\r\n                    <p className='hours'>{Math.floor(time / 3600000)} : {(time % 3600000)!==0?((time % 3600000) / 60000):'00'}</p>\r\n                    <FontAwesomeIcon className='arrow' icon={faSortDown} onClick={()=>{setInSelecting(!inSelecting)}}></FontAwesomeIcon>\r\n                    <div className={inSelecting?'dropTime dropTimeOn':'dropTime'}>\r\n                        <div className='dropDownHours'>\r\n                            <div className='sortUpDropDown'><FontAwesomeIcon icon={faSortUp}></FontAwesomeIcon></div>\r\n                            <div className='sortDownDropDown'><FontAwesomeIcon icon={faSortDown}></FontAwesomeIcon></div>\r\n                            <div className='dropItems'>\r\n                                {\r\n                                    arrh.map((h) => {\r\n                                        if (h === 0) return <p key={h} data={h} onClick={selectH} >00</p>\r\n                                        return <p data={h} key={h} onClick={selectH}>{Math.floor(h / 3600000)}</p>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className='dropDownMinute'>\r\n                            <div className='sortUpDropDown'><FontAwesomeIcon icon={faSortUp}></FontAwesomeIcon></div>\r\n                            <div className='sortDownDropDown'><FontAwesomeIcon icon={faSortDown}></FontAwesomeIcon></div>\r\n                            <div className='dropItems'>\r\n                                {\r\n                                    arrm.map((m) => {\r\n                                        if (m === 0) return <p data={m} key={m} onClick={selectM}>00</p>\r\n                                        return <p data={m} key={m} onClick={selectM}>{(m % 3600000) / 60000}</p>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='datePickerCalendar'>\r\n                    <div className='daysOfWeek'>\r\n                        <div>пн</div>\r\n                        <div>вт</div>\r\n                        <div>ср</div>\r\n                        <div>чт</div>\r\n                        <div>пт</div>\r\n                        <div>сб</div>\r\n                        <div>вс</div>\r\n                    </div>\r\n                    <div className='DatePickerItemsBox'>\r\n                {calendar.map((day,i) => {\r\n                const date = day\r\n                weekHub.push(date)\r\n\r\n                if (((i + 1) % 7) === 0) {\r\n                    const render = weekHub\r\n                    weekHub = []\r\n                    return <div key={moment(day,'D/M/Y').format('W') + '%'} className={(calendar.length / 7) === 4?'datePickerWeek week4':(calendar.length / 7) === 5 ? 'datePickerWeek week5':(calendar.length / 7) === 6?'datePickerWeek week6':''}>\r\n                        {render.map((day) => {\r\n                            return (\r\n                                    <div className={moment(selectedDate).format('D/M/Y')==day?'datePickerDay selectedDayPickerDay':'datePickerDay'} key={moment(day,'D/M/Y').valueOf() + 2} data={moment(day,'D/M/Y').valueOf()} onClick={(e)=>{setSelectedDate(Number(e.currentTarget.getAttribute('data'))); hide()}}>{moment(day,'D/M/Y').format('D')}</div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                }\r\n                \r\n            })}\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default DatePicker","import { faAddressBook, faCalendar, faChevronDown, faSquare } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { useRef, useState } from \"react\"\r\nimport DatePicker from './UI/DatePicker'\r\nimport moment from 'moment'\r\nconst CustomInput = ({post}) => {\r\n    const [date, setDate] = useState(moment().valueOf())\r\n    const [dateIsOn, setDateIsOn] = useState(false)\r\n    const changingDateFunc = (data) => {\r\n        setDate(data)\r\n    }\r\n    const [focused, setFocused] = useState(false)\r\n    const focus = (e) => {\r\n        e.preventDefault()\r\n        if(!focused){\r\n            setFocused(true)\r\n            textArea.current.focus()\r\n            document.addEventListener('mousedown',outSideClick)\r\n        }\r\n    }\r\n    const outSideClick = (e) => {\r\n        if(!refInput.current.contains(e.target)){\r\n            setFocused(false)\r\n            textArea.current.blur()\r\n            document.removeEventListener('mousedown',outSideClick)\r\n        }\r\n    }   \r\n    const refInput = useRef()\r\n    const textArea = useRef()\r\n    const [selectIsOpened, setSelectIsOpened] = useState(false)\r\n    const [selectValue, setSelectValue] = useState({\r\n        _id: 0,\r\n        value: 'No List'\r\n    })\r\n    const handleChangeSelected = (e) => {\r\n        setSelectValue({_id: e.currentTarget.getAttribute('data'), value: e.currentTarget.getAttribute('name')})\r\n    }\r\n    const sendData = () => {\r\n\r\n        if(text.length > 0) {\r\n            setText('')\r\n            setDate(moment().valueOf())\r\n            setSelectValue({\r\n                _id: 0,\r\n                value: 'No List'\r\n            })\r\n            textArea.current.innerText = ''\r\n            post(text, date.value,selectValue.value)\r\n        }\r\n    }\r\n    const hide = () => {\r\n    }\r\n    const [text,setText] = useState('')\r\n    const handleText = (e) => {\r\n        if(e.key=='Enter'){\r\n            e.preventDefault()\r\n            console.log('enter')\r\n            sendData()\r\n        }else{\r\n            setText(e.target.innerText)\r\n        }\r\n    }\r\n    return(\r\n        <div ref={refInput} className={focused?'CustomInputBox active':'CustomInputBox'} onClick={focus}>\r\n            <div className='quadrat'>\r\n                <div className='iconBox'><FontAwesomeIcon icon={faSquare}></FontAwesomeIcon></div>\r\n                \r\n            </div>\r\n                <span ref={textArea} onKeyDown={handleText} className='inputItem' role=\"textbox\" contentEditable='true'>\r\n                </span>\r\n            <div className='rightSide'>\r\n                <div className='calendarBox'>\r\n                    <FontAwesomeIcon icon={faCalendar} onClick={()=>setDateIsOn(!dateIsOn)}></FontAwesomeIcon>\r\n                    <div className={dateIsOn?'datePickerBoxDrop isOnDateSelect':'datePickerBoxDrop'}>\r\n                        <DatePicker onChange={changingDateFunc} hide={hide}></DatePicker>\r\n                    </div>\r\n                </div>\r\n                <div className='select' onClick={()=>{setSelectIsOpened(!selectIsOpened)}}>\r\n                    <div className='outLiendeCircle'></div>\r\n                    <p>{selectValue.value}</p>\r\n                    <FontAwesomeIcon icon={faChevronDown}></FontAwesomeIcon>\r\n                    {selectIsOpened?<div className='dropDown'>\r\n                        <ul>\r\n                            <li className={selectValue===1?'selectedList':''} onClick={handleChangeSelected} data='1' name='Contacts List'><FontAwesomeIcon icon={faAddressBook}></FontAwesomeIcon>Contacts List</li>\r\n                            <li className={selectValue===2?'selectedList':''} onClick={handleChangeSelected} data='2' name='Main List'><FontAwesomeIcon icon={faAddressBook}></FontAwesomeIcon>Main List</li>\r\n                            <li className={selectValue===3?'selectedList':''} onClick={handleChangeSelected} data='3' name='Not Main List'><FontAwesomeIcon icon={faAddressBook}></FontAwesomeIcon>Not Main List</li>\r\n                            <li className={selectValue===4?'selectedList':''} onClick={handleChangeSelected} data='4' name='Logic List'><FontAwesomeIcon icon={faAddressBook}></FontAwesomeIcon>Logic List</li>\r\n                            <li className={selectValue===5?'selectedList':''} onClick={handleChangeSelected} data='5' name='To do List'><FontAwesomeIcon icon={faAddressBook}></FontAwesomeIcon>To do List</li>\r\n                        </ul>\r\n                    </div>:''}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default CustomInput","import { useState } from 'react';\nimport './App.css';\nimport CustomInput from './customInput';\nimport moment from 'moment'\nimport { faAddressBook, faCalendar, faChevronDown, faSquare } from \"@fortawesome/free-solid-svg-icons\"\nimport {faSquare as squareoute} from '@fortawesome/free-regular-svg-icons'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nfunction App() {\n  const [posts,setPosts] = useState([])\n  const createPost = ( text, date = moment(), list = 'No List' ) => {\n    const newPost = {\n      _id: (moment() + Math.random() * 100),\n      text,\n      date,\n      list\n    }\n\n    setPosts(prev=>{\n      const newArray = prev.concat([newPost])\n      return newArray\n    })\n  }\n  return (\n    <div className=\"App\">\n        <CustomInput post={createPost}></CustomInput>\n        <div className='posts'>\n            {\n              posts.map((item)=>{\n                return (\n                  <div className='CustomInputBox active post' key={item._id}>\n            <div className='quadrat'>\n                <div className='iconBox'><FontAwesomeIcon icon={faSquare}></FontAwesomeIcon></div>\n                \n            </div>\n                <span className='inputItem postsInput' role=\"textbox\">\n                  <p>{item.text}</p>\n                </span>\n            <div className='rightSide'>\n                <div className='calendarBox postsCalendarItem'>\n                  {moment(item.date).format('D/M/Y')}\n                </div>\n                <div className='select'>\n                    <div className='outLiendeCircle'></div>\n                    <p>{item.list}</p>\n                </div>\n            </div>\n        </div>\n                )\n              })\n            }\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}